- job:
    name: packaging_test_pull_request_katello_rpm
    node: el7
    description: |
      Run test builds for an RPM pull request to katello-packaging.
    concurrent: true
    logrotate:
      daysToKeep: 45
      numToKeep: -1
    properties:
      - github:
          url: https://github.com/Katello/katello-packaging
    scm:
      - git:
          url: https://github.com/Katello/katello-packaging
          wipe-workspace: true
          branches:
            - '${ghprbActualCommit}'
          refspec: '+refs/pull/${ghprbPullId}/*:refs/remotes/origin/pr/${ghprbPullId}/*'
    triggers:
      - github_pr:
          context: 'katello-packaging'
    builders:
      - shell: |+
          #!/bin/bash -ex

          # identify changed projects, 5 at most!
          for project in $(git diff --name-only ${ghprbActualCommit} $(git merge-base ${ghprbActualCommit} origin/master) | cut -d/ -f1 | sort -u | tail -n5); do
            [ -d ${project} ] || continue # bail if the dir doesn't exist
            [ $(find ${project} -name *.spec | wc -l) -eq 1 ] || continue # bail if we can't find a specfile

            releaser=koji-katello
            project=${project}
            releaser=${releaser}

            if [ $project = rubygem-katello ]; then
              releaser=koji-katello-jenkins
              nightly_jenkins_job=test_katello_core
              gitrelease=false
            fi

            if [ $project = katello-installer ]; then
              releaser=koji-katello-jenkins
              nightly_jenkins_job=release_build_katello_installer
              gitrelease=false
            fi

            ## below this point: contents of packaging_build_rpm_katello shell

            git-annex init

            if [[ $project == 'rubygem-katello' || $project == 'katello-installer' ]]; then
              ./setup_sources.sh $project --relaxed
            else
              ./setup_sources.sh $project
            fi

            if [[ $project == 'katello-agent' ]]; then
              releaser='koji-katello-client'
            fi

            mkdir rel-eng/build
            args="-o $(pwd)/rel-eng/build/"
            [ -n "${tag}" ] && args="$args --tag=$tag"
            [ x"${scratch}" != xfalse ] && args="$args --scratch"
            [ x"${gitrelease}" != xfalse ] && args="$args --test"
            [ -n "${nightly_jenkins_job}" ] && args="$args --arg jenkins_job=${nightly_jenkins_job}"
            [ -n "${nightly_jenkins_job_id}" ] && args="$args --arg jenkins_job_id=${nightly_jenkins_job_id}"

            cd $project
            tito release ${args} ${releaser} 2>&1 | tee tito.log

            error=`grep "ERROR" tito.log | wc -l`

            if [[ $error != 0 ]];then
              cat tito.log
              exit 1
            fi

            traceback=`grep "Traceback" tito.log | wc -l`

            if [[ $traceback != 0 ]]; then
              cat tito.log
              exit 1
            fi


            release_tasks=`grep "Task info:" tito.log | grep -o "[0-9]*"`
            release_count=`echo $release_tasks | wc -w`
            response=$(koji -c ~/.koji/katello-config watch-task $release_tasks)

            if [[ $? == 1 ]]; then
              build_exists_count=`echo $response | grep -o "Build already exists" | wc -l`


              if [[ $build_exists_count == $release_count ]] then
                exit 0
              else
                exit 1
              fi
            else
              exit 0
            fi

          done
