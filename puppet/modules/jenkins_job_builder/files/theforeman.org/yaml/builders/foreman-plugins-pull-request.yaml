- builder:
    name: plugin-pull-request
    builders:
      - shell: |+
          #!/bin/bash -ex

          rm -rf plugin/
          git clone {plugin-repo} plugin

          # check out the pull request
          pushd plugin
          git fetch --tags --progress {plugin-repo} +refs/pull/${{ghprbPullId}}/*:refs/remotes/origin/pr/${{ghprbPullId}}/*
          git checkout -f ${{ghprbActualCommit}}
          popd

          TOP_ROOT=`pwd`
          APP_ROOT=${{TOP_ROOT}}/foreman
          PLUGIN_ROOT=${{TOP_ROOT}}/plugin

          cd ${{APP_ROOT}}

          # setup basic settings file
          sed -e 's/:locations_enabled: false/:locations_enabled: true/' ${{APP_ROOT}}/config/settings.yaml.example > ${{APP_ROOT}}/config/settings.yaml
          sed -i 's/:organizations_enabled: false/:organizations_enabled: true/' ${{APP_ROOT}}/config/settings.yaml

          # RVM Ruby environment
          . /etc/profile.d/rvm.sh
          # Use a gemset unique to each executor to enable parallel builds
          gemset=$(echo ${{JOB_NAME}} | cut -d/ -f1)-${{EXECUTOR_NUMBER}}
          rvm use ruby-${{ruby}}@${{gemset}} --create
          rvm gemset empty --force
          gem install bundler --no-ri --no-rdoc

          bundle install --without development --retry 5 --jobs 5

          # we need to install node modules for integration tests
          if [ -e "${{APP_ROOT}}/package.json" ]; then
            npm install npm@'<5.0.0' # first upgrade to newer npm
            ${{APP_ROOT}}/node_modules/.bin/npm install
          fi

          # Database environment
          (
            sed "s/^test:/development:/; s/database:.*/database: ${{gemset}}-dev/" ${{HOME}}/${{database}}.db.yaml
            echo
            sed "s/database:.*/database: ${{gemset}}-test/" ${{HOME}}/${{database}}.db.yaml
          ) > ${{APP_ROOT}}/config/database.yml

          # Create DB first in development as migrate behaviour can change
          bundle exec rake db:drop db:create db:migrate

          # Ensure we don't mention the gem twice in the Gemfile in case it's already mentioned there
          find Gemfile bundler.d -type f -exec sed -i "/gem ['\"]{plugin-name}['\"]/d" {{}} \;

          # Now let's introduce the plugin
          echo "gem '{plugin-name}', :path => '${{PLUGIN_ROOT}}'" >> bundler.d/Gemfile.local.rb

          # Plugin specifics
          [ -e ${{PLUGIN_ROOT}}/gemfile.d/{plugin-name}.rb ] && cat ${{PLUGIN_ROOT}}/gemfile.d/{plugin-name}.rb >> bundler.d/Gemfile.local.rb

          # Update dependencies
          bundle update --retry 5 --jobs 5

          # If the plugin contains npm deps, we need to install its specific modules
          if [ -e "${{PLUGIN_ROOT}}/package.json" ]; then
            ${{APP_ROOT}}/node_modules/.bin/npm install
          fi

          # Now let's add the plugin migrations
          bundle exec rake db:migrate

          tasks="jenkins:unit"
          [ ${{database}} = postgresql ] && tasks="${{tasks}} jenkins:integration"
          bundle exec rake ${{tasks}} TESTOPTS="-v" --trace
